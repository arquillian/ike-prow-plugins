[
  {
    "sha": "fdeb66e6c0f3c09564dc2297966af3ae847b52be",
    "filename": "src/test/java/io/openshift/booster/NewTest.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/bartoszmajsak/wfswarm-booster-pipeline-test/blob/6c27474573dac946aab9e9c40255be93fbf23c7e/src/test/java/io/openshift/booster/NewTest.java",
    "raw_url": "https://github.com/bartoszmajsak/wfswarm-booster-pipeline-test/raw/6c27474573dac946aab9e9c40255be93fbf23c7e/src/test/java/io/openshift/booster/NewTest.java",
    "contents_url": "https://api.github.com/repos/bartoszmajsak/wfswarm-booster-pipeline-test/contents/src/test/java/io/openshift/booster/NewTest.java?ref=6c27474573dac946aab9e9c40255be93fbf23c7e",
    "patch": "@@ -0,0 +1,66 @@\n+/*\n+ *\n+ *  Copyright 2016-2017 Red Hat, Inc, and individual contributors.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+\n+package io.openshift.booster;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+import javax.ws.rs.client.WebTarget;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.jboss.arquillian.container.test.api.RunAsClient;\n+import org.jboss.arquillian.junit.Arquillian;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.wildfly.swarm.arquillian.DefaultDeployment;\n+\n+/**\n+ * @author Heiko Braun\n+ */\n+@RunWith(Arquillian.class)\n+@DefaultDeployment\n+public class NewTest {\n+\n+    @Test\n+    @RunAsClient\n+    public void test_service_invocation() {\n+        Client client = ClientBuilder.newClient();\n+        WebTarget target = client.target(\"http://localhost:8080\")\n+                .path(\"api\").path(\"greeting\");\n+\n+        Response response = target.request(MediaType.APPLICATION_JSON).get();\n+        Assert.assertEquals(200, response.getStatus());\n+        Assert.assertTrue(response.readEntity(String.class).contains(\"Hello, World!\"));\n+    }\n+\n+    @Test\n+    @RunAsClient\n+    public void test_service_invocation_withParam() {\n+        Client client = ClientBuilder.newClient();\n+        WebTarget target = client.target(\"http://localhost:8080\")\n+                .path(\"api\").path(\"greeting\")\n+                .queryParam(\"name\", \"Peter\");\n+\n+        Response response = target.request(MediaType.APPLICATION_JSON).get();\n+        Assert.assertEquals(200, response.getStatus());\n+        Assert.assertTrue(response.readEntity(String.class).contains(\"Hello, Peter!\"));\n+    }\n+\n+}"
  }
]