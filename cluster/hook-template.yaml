kind: Template
apiVersion: v1
parameters:
- name: REGISTRY
  required: true
  value: docker.io
- name: DOCKER_REPO
  required: true
  value: arquillian
- name: VERSION
  required: true
- name: HOOK_HOSTNAME
  value: ""
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: hook
      labels:
        app: hook
        type: prow-core
        version: ${VERSION}
    spec:
      replicas: 1
      triggers:
        - type: ConfigChange
      strategy:
        type: Rolling
        rollingParams:
          intervalSeconds: 1
          updatePeriodSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
      template:
        metadata:
          labels:
            app: hook
            type: prow-core
        spec:
          terminationGracePeriodSeconds: 180
          containers:
          - name: hook
            image: ${REGISTRY}/${DOCKER_REPO}/hook:${VERSION}
            imagePullPolicy: Always
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            env:
              - name: VERSION
                value: ${VERSION}
            args:
            - --dry-run=false
            ports:
              - name: http
                containerPort: 8888
            volumeMounts:
            - name: hmac
              mountPath: /etc/webhook
              readOnly: true
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: plugins
              mountPath: /etc/plugins
              readOnly: true
          volumes:
          - name: hmac
            secret:
              secretName: hmac-token
          - name: oauth
            secret:
              secretName: oauth-token
          - name: config
            configMap:
              name: config
          - name: plugins
            configMap:
              name: plugins
  - kind: Service
    apiVersion: v1
    metadata:
      name: hook
    spec:
      selector:
        app: hook
      ports:
      - port: 8888
      type: NodePort
  - kind: Route
    apiVersion: v1
    metadata:
      name: hook
    spec:
      host: ${HOOK_HOSTNAME}
      to:
        kind: Service
        name: hook
